name: Node-CI

on:
  push:
    branches:
      - master
      - develop
      

jobs:
  deploy-master:

    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Copy code files to container
      uses: actions/checkout@v2

    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Install npm dependencies
      run: npm install

    - name: Run generate task
      run: npm run generate
      env:
          INFURA: ${{ secrets.INFURA_MAINNET }}
          NETWORK_ID: ${{ secrets.NETWORK_ID_MAINNET }}
          FUNDRAISE_ADDRESS: ${{ secrets.FUNDRAISE_ADDRESS_MAINNET }}
          FORMATIC_KEY: ${{ secrets.FORMATIC_KEY_MAINNET }}
          PORTIS_ID: ${{ secrets.PORTIS_ID }}

    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@v2.1.1
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}

  deploy-develop:

    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install npm dependencies
        run: npm install

      - name: Run generate task
        run: npm run generate
        env:
          INFURA: ${{ secrets.INFURA_TESTNET }}
          NETWORK_ID: ${{ secrets.NETWORK_ID_TESTNET }}
          FUNDRAISE_ADDRESS: ${{ secrets.FUNDRAISE_ADDRESS_TESTNET }}
          FORMATIC_KEY: ${{ secrets.FORMATIC_KEY_TESTNET }}
          PORTIS_ID: ${{ secrets.PORTIS_ID }}
          API_URL: ${{ secrets.API_URL }}
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}

  deploy-develop-bsc:

    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop-bsc'

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install npm dependencies
        run: npm install

      - name: Run generate task
        run: npm run generate
        env:
          INFURA: ${{ secrets.INFURA_TESTNET }}
          NETWORK_ID: ${{ secrets.NETWORK_ID_TESTNET }}
          FUNDRAISE_ADDRESS: ${{ secrets.FUNDRAISE_ADDRESS_TESTNET }}
          FORMATIC_KEY: ${{ secrets.FORMATIC_KEY_TESTNET }}
          PORTIS_ID: ${{ secrets.PORTIS_ID }}

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}

  